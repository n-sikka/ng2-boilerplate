@import 'variables';

// BOOTSTRAP IMPORTED MIXINS to SIMULATE their CSS
// Shadow
@mixin box-shadow($shadow...) {
  @if $enable-shadows {
    box-shadow: $shadow;
  }
}

@mixin hover {
  &:hover { @content; }
}

// Gradient
@mixin gradient-bg($color) {
  @if $enable-gradients {
    background: $color linear-gradient(180deg, mix($body-bg, $color, 15%), $color) repeat-x;
  } @else {
    background-color: $color;
  }
}
// Color contrast
@function color-yiq($color) {
  $r: red($color);
  $g: green($color);
  $b: blue($color);

  $yiq: (($r * 299) + ($g * 587) + ($b * 114)) / 1000;

  @if ($yiq >= $yiq-contrasted-threshold) {
    @return $yiq-text-dark;
  } @else {
    @return $yiq-text-light;
  }
}


// Button variants
//
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons

@mixin button-variant($background, $border, 
          $hover-background: darken($background, 7.5%), 
          $hover-border: darken($border, 10%), 
          $active-background: darken($background, 5%),
          $active-border: darken($border, 12.5%)) {

    color: color-yiq($background);
    border-color: $border;
    background-color: $background;
    @include box-shadow($btn-box-shadow);
  
    @include hover {
      color: color-yiq($hover-background);
      @include gradient-bg($hover-background);
      border-color: $hover-border;
    }
  
    // Disabled comes first so active can properly restyle
    &.disabled,
    &:disabled {
      color: color-yiq($background);
      background-color: $background;
      border-color: $border;
    }
  
    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active,
    .show > &.dropdown-toggle {
      color: color-yiq($active-background);
      background-color: $active-background;
      @if $enable-gradients {
        background-image: none; // Remove the gradient for the pressed/active state
      }
      border-color: $active-border;
    }
  }
  
  @mixin button-outline-variant($color, $color-hover: color-yiq($color), $active-background: $color, $active-border: $color) {
    color: $color;
    background-color: transparent;
    background-image: none;
    border-color: $color;
  
    &:hover {
      color: $color-hover;
      background-color: $active-background;
      border-color: $active-border;
    }
  
    &.disabled,
    &:disabled {
      color: $color;
      background-color: transparent;
    }
  
    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active,
    .show > &.dropdown-toggle {
      color: color-yiq($active-background);
      background-color: $active-background;
      border-color: $active-border;
    }
  }

  
/**
 * This is being used for adding quick css for various screen sizes. variables are in varibles.scss
 */
@mixin for-screen($breakpoint) {
  @if $breakpoint == 'mobile-sm' {
      @media (max-width: $mobile-sm) {
          @content;
      }
  }
  @else if $breakpoint == 'mobile' {
    @media (max-width: $mobile) {
      @content;
    }
  }
  @else if $breakpoint == 'above-mobile' {
    @media (min-width: $mobile) {
      @content;
    }
  }
   @else if $breakpoint == 'tablet' {
    @media (max-width: $tablet)  {
      @content;
    }
  }
  @else if $breakpoint == 'only-tablet' {
    @media (min-width: $mobile) and (max-width: $tablet)  {
      @content;
    }
  }
  @else if $breakpoint == 'desktop' {
    @media (min-width: $tablet) {
      @content;
    }
  }
  @else if $breakpoint == 'tablet-to-desktop' {
      @media (min-width: $tablet) and (max-width: $desktop) {
        @content;
      }
  }
  @else if $breakpoint == 'below-desktop' {
      @media (max-width: $desktop) {
          @content;
      }
  }
  @else if $breakpoint == 'above-desktop' {
      @media (min-width: $desktop) {
          @content;
      }
  }
  @else if $breakpoint == '$super-desktop' {
      @media (min-width: $super-desktop) {
          @content;
      }
  }
  @else if $breakpoint == 'mobile-landscape' {
    @media (max-width: $tablet) and (orientation: landscape) {
      @content;
    }
  }
}